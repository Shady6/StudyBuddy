// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using stud_bud_back.Helpers;

namespace stud_bud_back.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("stud_bud_back.Entities.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("GroupId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("stud_bud_back.Entities.ClassSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CohortId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CohortId")
                        .IsUnique();

                    b.HasIndex("GroupId")
                        .IsUnique();

                    b.ToTable("ClassSchedules");
                });

            modelBuilder.Entity("stud_bud_back.Entities.Cohort", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminId")
                        .HasColumnType("int");

                    b.Property<int>("ClassScheduleId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("Cohorts");
                });

            modelBuilder.Entity("stud_bud_back.Entities.CohortModerator", b =>
                {
                    b.Property<int>("CohortId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CohortId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("CohortModerators");
                });

            modelBuilder.Entity("stud_bud_back.Entities.CohortStudent", b =>
                {
                    b.Property<int>("CohortId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CohortId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("CohortStudents");
                });

            modelBuilder.Entity("stud_bud_back.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdjunctName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CohortId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CohortId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("stud_bud_back.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CohortId")
                        .HasColumnType("int");

                    b.Property<int>("GroupNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CohortId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("stud_bud_back.Entities.GroupUser", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("GroupId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("GroupUsers");
                });

            modelBuilder.Entity("stud_bud_back.Entities.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClassScheduleId");

                    b.HasIndex("CourseId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("stud_bud_back.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("stud_bud_back.Entities.Assignment", b =>
                {
                    b.HasOne("stud_bud_back.Entities.Course", "Course")
                        .WithMany("Assignment")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("stud_bud_back.Entities.Group", "Group")
                        .WithMany("Assignments")
                        .HasForeignKey("GroupId");
                });

            modelBuilder.Entity("stud_bud_back.Entities.ClassSchedule", b =>
                {
                    b.HasOne("stud_bud_back.Entities.Cohort", "Cohort")
                        .WithOne("ClassSchedule")
                        .HasForeignKey("stud_bud_back.Entities.ClassSchedule", "CohortId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("stud_bud_back.Entities.Group", "Group")
                        .WithOne("ClassSchedule")
                        .HasForeignKey("stud_bud_back.Entities.ClassSchedule", "GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("stud_bud_back.Entities.Cohort", b =>
                {
                    b.HasOne("stud_bud_back.Entities.User", "Admin")
                        .WithMany("Cohorts")
                        .HasForeignKey("AdminId");
                });

            modelBuilder.Entity("stud_bud_back.Entities.CohortModerator", b =>
                {
                    b.HasOne("stud_bud_back.Entities.Cohort", "Cohort")
                        .WithMany("CohortModerator")
                        .HasForeignKey("CohortId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("stud_bud_back.Entities.User", "User")
                        .WithMany("CohortModerator")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("stud_bud_back.Entities.CohortStudent", b =>
                {
                    b.HasOne("stud_bud_back.Entities.Cohort", "Cohort")
                        .WithMany("CohortStudent")
                        .HasForeignKey("CohortId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("stud_bud_back.Entities.User", "User")
                        .WithMany("CohortStudent")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("stud_bud_back.Entities.Course", b =>
                {
                    b.HasOne("stud_bud_back.Entities.Cohort", "Cohort")
                        .WithMany("Course")
                        .HasForeignKey("CohortId");
                });

            modelBuilder.Entity("stud_bud_back.Entities.Group", b =>
                {
                    b.HasOne("stud_bud_back.Entities.Cohort", "Cohort")
                        .WithMany("Group")
                        .HasForeignKey("CohortId");
                });

            modelBuilder.Entity("stud_bud_back.Entities.GroupUser", b =>
                {
                    b.HasOne("stud_bud_back.Entities.Group", "Group")
                        .WithMany("GroupUser")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("stud_bud_back.Entities.User", "Student")
                        .WithMany("GroupUser")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("stud_bud_back.Entities.Lesson", b =>
                {
                    b.HasOne("stud_bud_back.Entities.ClassSchedule", "ClassSchedule")
                        .WithMany("Lessons")
                        .HasForeignKey("ClassScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("stud_bud_back.Entities.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
